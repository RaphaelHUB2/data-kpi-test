"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const missing_environment_error_1 = require("./missing-environment.error");
describe('MissingEnvError', () => {
    it('should be instance of MissingEnvError', () => {
        const missingEnvError = new missing_environment_error_1.MissingEnvError('env');
        expect(missingEnvError).toBeInstanceOf(missing_environment_error_1.MissingEnvError);
        expect(missingEnvError.message).toEqual('Missing environment variable: env');
        expect(missingEnvError.data).toBeUndefined();
        expect(missingEnvError.internalError).toBeUndefined();
        expect(missingEnvError.name).toEqual('MissingEnvError');
        expect(typeof missingEnvError.timestamp).toEqual('number');
    });
    describe('toString', () => {
        it('should return the expected string', () => {
            const missingEnvError = new missing_environment_error_1.MissingEnvError('env');
            const result = missingEnvError.toString();
            const expected = `[${missingEnvError.name}] - ${new Date(missingEnvError.timestamp)}: ${missingEnvError.message}`;
            expect(result).toBe(expected);
        });
    });
});
//# sourceMappingURL=missing-environment.error.spec.js.map